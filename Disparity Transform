import cv2
import matplotlib.pyplot as plt
import numpy as np
import math
right_img=cv2.imread('scene1.row3.col2.ppm',0)
left_img=cv2.imread('scene1.row3.col3.ppm',0)
print(left_img.shape)
figure=plt.figure(figsize=(10,10))
plt.subplot(1,2,1),plt.imshow(left_img,cmap='gray'),plt.title('left image')
plt.subplot(1,2,2),plt.imshow(right_img,cmap='gray'),plt.title('right image')

windows_size=15
d=30
mid=int((windows_size-1)/2)

disparity=[]

for i in range (mid,left_img.shape[0]-mid):
    for j in range (mid,left_img.shape[1]-mid):
        y=left_img[i-mid:i+mid+1,j-mid:j+mid+1]
        k=1
        disparityCOST=[]
        while k>0:
            if (j-mid+k)<=(left_img.shape[1]-2*mid) and (k<=d):
                z=right_img[i-mid:i+mid+1,j-mid+k-1:j+mid+k-1+1]
                k+=1
                p=abs(y-z)
                disparityCOST.append((np.multiply(p,p)).sum())              
            else:
                k=0
        disparity.append(disparityCOST.index(min(disparityCOST)))


disparity=255*(np.array(disparity)/max(disparity) )
disparityimg=disparity.reshape(left_img.shape[0]-2*mid,left_img.shape[1]-2*mid)

figure=plt.figure(figsize=(17,17))
plt.subplot(1,3,1),plt.imshow(left_img,cmap='gray'),plt.title('left image')
plt.subplot(1,3,2),plt.imshow(disparityimg,cmap='gray'),plt.title('disparity map')
plt.subplot(1,3,3),plt.imshow(right_img,cmap='gray'),plt.title('right image')
